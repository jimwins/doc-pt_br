<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b676d0b9c968ebb0b7429835f2f6bd364275eed1 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.utf8-decode">
 <refnamediv>
  <refname>utf8_decode</refname>
  <refpurpose>
   Converte uma string de UTF-8 para ISO-8859-1, substituindo caracteres inválidos ou não
   representáveis
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  &warn.deprecated.function-8-2-0;
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>utf8_decode</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta função converte a string <parameter>string</parameter> da codificação
   <literal>UTF-8</literal> para a <literal>ISO-8859-1</literal>. Bytes
   na string que não sejam válidos em <literal>UTF-8</literal>, e caracteres
   <literal>UTF-8</literal> que não existam em
   <literal>ISO-8859-1</literal> (isto é, pontos de código acima de
   <literal>U+00FF</literal>) são subtituídos por <literal>?</literal>.
  </para>

  <note>
   <para>
    Muitas páginas da web que dizem usar a codificação <literal>ISO-8859-1</literal>
    na verdade usam a codificação similar <literal>Windows-1252</literal>,
    e os navegadores irão interpretar as páginas <literal>ISO-8859-1</literal> como
    <literal>Windows-1252</literal>. <literal>Windows-1252</literal> apresenta
    caracteres imprimíveis adicionais, como o símbolo do Euro
    (<literal>€</literal>) e aspas inglesas (<literal>“</literal>
    <literal>”</literal>), ao invés de certos caracteres de controle
    <literal>ISO-8859-1</literal>. Esta função não converterá esses caracteres
    <literal>Windows-1252</literal> corretamente. Use uma função diferente
    se a conversão de <literal>Windows-1252</literal> for requerida.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Uma string em UTF-8.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a conversão em ISO-8859-1 da <parameter>string</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.2.0</entry>
       <entry>
        Esta função tornou-se defasada.
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        Esta função foi movida de extensão XML para o núcleo do PHP.
        Em versões anteriores, estava disponível somente se a extensão XML estivesse instalada.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplos básicos</title>
   <programlisting role="php">
<![CDATA[
<?php
// Converte a string 'Zoë' de UTF-8 para ISO 8859-1
$utf8_string = "\x5A\x6F\xC3\xAB";
$iso8859_1_string = utf8_decode($utf8_string);
echo bin2hex($iso8859_1_string), "\n";

// Sequências inválidas em UTF-8 são substituídas por '?'
$invalid_utf8_string = "\xC3";
$iso8859_1_string = utf8_decode($invalid_utf8_string);
var_dump($iso8859_1_string);

// Caracteres que não existem em ISO 8859-1, tal como
// '€' (símbolo do Euro) também são substituídas por '?'
$utf8_string = "\xE2\x82\xAC";
$iso8859_1_string = utf8_decode($utf8_string);
var_dump($iso8859_1_string);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
5a6feb
string(1) "?"
string(1) "?"
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Defasagem e alternativas</title>
   <para>
    Esta função tornou-se <emphasis>defasada</emphasis> a partir do PHP 8.2.0,
    e será removida em uma versão futura. Usos existentes devem ser verificados
    e substituídos com alternativas apropriadas.
   </para>
   <para>
    Funcionalidade similar pode ser obtida com <function>mb_convert_encoding</function>,
    que suporta ISO-8859-1 e muitas outras codificações de caracteres.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$utf8_string = "\xC3\xAB"; // 'ë' (e com trema) em UTF-8
$iso8859_1_string = mb_convert_encoding($utf8_string, 'ISO-8859-1', 'UTF-8');
echo bin2hex($iso8859_1_string), "\n";

$utf8_string = "\xCE\xBB"; // 'λ' (letra grega lambda minúscula) em UTF-8
$iso8859_7_string = mb_convert_encoding($utf8_string, 'ISO-8859-7', 'UTF-8');
echo bin2hex($iso8859_7_string), "\n";

$utf8_string = "\xE2\x82\xAC"; // '€' (símbolo do Euro) em UTF-8 (ausente na ISO-8859-1)
$windows_1252_string = mb_convert_encoding($utf8_string, 'Windows-1252', 'UTF-8');
echo bin2hex($windows_1252_string), "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
eb
eb
80
]]>
     </screen>
    </informalexample>
   </para>
   <para>
    Outros exemplos que podem estar disponíveis dependendo das extensões instaladas são
    <methodname>UConverter::transcode</methodname> e <function>iconv</function>.
   </para>
   <para>
    Todos os exemplos a seguir dão o mesmo resultado:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$utf8_string = "\x5A\x6F\xC3\xAB"; // 'Zoë' em UTF-8
$iso8859_1_string = utf8_decode($utf8_string);
echo bin2hex($iso8859_1_string), "\n";

$iso8859_1_string = mb_convert_encoding($utf8_string, 'ISO-8859-1', 'UTF-8');
echo bin2hex($iso8859_1_string), "\n";

$iso8859_1_string = iconv('UTF-8', 'ISO-8859-1', $utf8_string);
echo bin2hex($iso8859_1_string), "\n";

$iso8859_1_string = UConverter::transcode($utf8_string, 'ISO-8859-1', 'UTF8');
echo bin2hex($iso8859_1_string), "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
5a6feb
5a6feb
5a6feb
5a6feb
]]>
     </screen>
    </informalexample>
    Especificar <literal>'?'</literal> como a opção <literal>'to_subst'</literal>
    no método <methodname>UConverter::transcode</methodname> dá o mesmo resultado que
    <function>utf8_decode</function> para strings inválidas ou que não possam
    ser representadas em ISO 8859-1.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
$utf8_string = "\xE2\x82\xAC"; // € (símbolo do Euro) não existe na ISO 8859-1
$iso8859_1_string = UConverter::transcode(
    $utf8_string, 'ISO-8859-1', 'UTF-8', ['to_subst' => '?']
);
var_dump($iso8859_1_string);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
sring(1) "?"
]]>
     </screen>
    </informalexample>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>utf8_encode</function></member>
    <member><function>mb_convert_encoding</function></member>
    <member><methodname>UConverter::transcode</methodname></member>
    <member><function>iconv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
